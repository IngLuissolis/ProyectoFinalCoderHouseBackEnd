<!-- Tarjetas de productos -->
<h1>Bienvenido al carrito</h1>
<h2>{{cartId}}</h2>

<table class="table m-2">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Cantidad</th>
            <th scope="col">Nombre</th>
            <th scope="col">Precio</th>
            <th scope="col">Dueño</th>
            <th scope="col">Acción</th>
        </tr>
    </thead>
    {{#each cartProducts}}
    <tbody>
        <td>#</td>
        <td>{{quantity}}</td>
        <td>{{nombre}}</td>
        <td>{{precio}}</td>
        <td>{{owner}}</td>
        <td>
          <button type="button" class="btn btn-danger" onclick="removeProductFromCart('{{productCartId}}')">Eliminar</button>
        </td>
    </tbody>
    {{/each}}
</table>

<div>
    <button type="button" class="btn btn-primary mb-3" onclick="generateTicket('{{cartId}}')">Generar Ticket</button>
</div>

<div>
    <button type="button" class="btn btn-primary mb-3" onclick="location.href='/api/views/loginProducts'">Volver a Catalogo</button>
</div>

<!-- Controlador de eventos para el botón "Generar Ticket" -->
<script>

  const cartId = '{{cartId}}';

  function generateTicket(cartId) {
    
    fetch(`/api/carts/${cartId}/purchase`)
      .then(response => response.json())
      .then(data => {

        let productsHTML = '';

        {{#each cartProducts}}
            productsHTML += `
                <p>Nombre de producto: {{nombre}}</p>
                <p>Cantidad: {{quantity}}</p>
                <hr>
            `;
        {{/each}}

        Swal.fire({
          title: 'Ticket Generado',
          html: `
            <p>Código: ${data.code}</p>
            <p>Fecha y Hora de Compra: ${data.purchase_datetime}</p>
            <hr>
            ${productsHTML}
            <p>Precio Total: ${data.amount}</p>
          `,
          confirmButtonText: 'Cerrar',
          onClose: () => {
            location.href = '/api/views/loginProducts';}
        });
      })
      .catch(error => {
        console.error(error);
      });
  }

  async function removeProductFromCart(productId) {

  console.log('removeProductFromCart: ' + productId);
  
  try {
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'DELETE'
    });

    console.log('response: ' + response);
  
    if (response.ok) {
      // El producto se eliminó correctamente
      Swal.fire({
        title: 'Producto Eliminado',
        text: 'El producto se eliminó correctamente del carrito.',
        icon: 'success',
        onClose: () => {
          location.reload(); // Recargar la página
        }
      });
    } else {
      // No se pudo eliminar el producto
      Swal.fire({
        title: 'Error',
        text: 'Hubo un error al eliminar el producto del carrito.',
        icon: 'error',
        willClose: () => {
          location.reload(); // Recargar la página
        }
      });
    }
  } catch (error) {
    console.error(error);
    // Error en la solicitud
    Swal.fire({
      title: 'Error',
      text: 'Hubo un error al realizar la solicitud para eliminar el producto.',
      icon: 'error',
      willClose: () => {
        location.reload(); // Recargar la página
      }
    });
  }
}


</script>